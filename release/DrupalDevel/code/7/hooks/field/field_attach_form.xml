<?xml version="1.0" encoding="UTF-8"?>
	<item>
		<title>field_attach_form</title>
		<external>http://api.drupal.org/api/search/7/hook_field_attach_form</external>
		<group>hook</group>
		<template><![CDATA[
/**
* Implements hook_field_attach_form().
*/
function ${file_name}_field_attach_form($entity_type, $entity, &$form, &$form_state, $langcode) {
   ${cursor}
}
]]></template>
		<help><![CDATA[<h2>hook_field_attach_form($entity_type, $entity, &$form, &$form_state, $langcode)</h2>

<p>Act on field_attach_form().</p>
<p>This hook is invoked after the field module has performed the operation.
Implementing modules should alter the $form or $form_state parameters.</p>

<h3>Parameters</h3>
<p><b>
$entity_type</b> -- 
The type of $entity; for example, 'node' or 'user'.</p>
<p><b>$entity</b> -- 
The entity for which an edit form is being built.</p>
<p><b>$form</b> -- 
The form structure where field elements are attached to. This might be a
full form structure, or a sub-element of a larger form. The
$form['#parents'] property can be used to identify the corresponding part
of $form_state['values']. Hook implementations that need to act on the
top-level properties of the global form (like #submit, #validate...) can
add a #process callback to the array received in the $form parameter, and
act on the $complete_form parameter in the process callback.</p>
<p><b>$form_state</b> -- 
An associative array containing the current state of the form.</p>
<p><b>$langcode</b> -- 
The language the field values are going to be entered in. If no language
is provided the default site language will be used.</p>



]]></help>
	</item>