
/*
 * DrupalDevelDialog.java
 *
 * Created on Sep 30, 2011, 4:16:53 PM
 */
package org.hollyit.drupaldevel.api;

import java.awt.event.ItemEvent;
import java.util.ArrayList;
import javax.swing.JComboBox;

/**
 *
 * @author Jamie Holly/HollyIT
 */
public class DrupalDevelDialog extends javax.swing.JDialog {

    public String libraryPath = "";
    private libraryParser parser;

    /** Creates new form DrupalDevelDialog */
    public DrupalDevelDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();
    }

    public String getItem() {
        String path = this.cbApiVersion.getSelectedItem().toString() + "/" + this.cbApiType.getSelectedItem().toString() + "/" + this.cbCategory.getSelectedItem().toString() + "/" + this.cbItem.getSelectedItem().toString();
        return path;
    }

    public void setLibrary(String path) {
        this.libraryPath = path;
        this.parser = new libraryParser(path);
        this.setVersions();

    }

    private void setVersions() {
        String path = "";
        path = this.setCB(path, this.cbApiVersion, false);


    }

    private void setTypes() {
        try {
            String path = this.cbApiVersion.getSelectedItem().toString();

            path = this.setCB(path, this.cbApiType, false);
            path = this.setCB(path, this.cbCategory, false);
            path = this.setCB(path, this.cbItem, true);
        } catch (NullPointerException e) {
            this.cbApiType.removeAllItems();
            this.cbCategory.removeAllItems();
            this.cbItem.removeAllItems();
        }

    }

    private void setCategory() {
        try {
            String path = this.cbApiVersion.getSelectedItem().toString() + "/" + this.cbApiType.getSelectedItem().toString();
            path = this.setCB(path, this.cbCategory, false);
            path = this.setCB(path, this.cbItem, true);
        } catch (NullPointerException e) {
            this.cbCategory.removeAllItems();
            this.cbItem.removeAllItems();
        }

    }

    private void setItems() {
        try {
            String path = this.cbApiVersion.getSelectedItem().toString() + "/" + this.cbApiType.getSelectedItem().toString() + "/" + this.cbCategory.getSelectedItem().toString();
            path = this.setCB(path, this.cbItem, true);
        } catch (NullPointerException e) {
            this.cbItem.removeAllItems();
        }



    }

    private String setCB(String path, JComboBox combobox, Boolean fileMode) {
        ArrayList items = new ArrayList();
        combobox.removeAllItems();
        if (fileMode) {
            items = this.parser.getFileItems(path);
        } else {
            items = this.parser.getPathItems(path);
        }
        for (int i = 0; i < items.size(); i++) {
            String item = items.get(i).toString();
            combobox.addItem(makeObj(item));
        }
        if (combobox.getItemCount() < 1) {
            this.btnInsert.setEnabled(false);
        } else {
            this.btnInsert.setEnabled(true);
        }
        return path + "/" + combobox.getSelectedItem();
    }

    private Object makeObj(final String item) {
        return new Object() {

            @Override
            public String toString() {
                return item;
            }
        };
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnAPIType = new javax.swing.JPanel();
        cbApiType = new javax.swing.JComboBox();
        pnlDrupalVersion = new javax.swing.JPanel();
        cbApiVersion = new javax.swing.JComboBox();
        pnItem = new javax.swing.JPanel();
        cbItem = new javax.swing.JComboBox();
        pnCategory = new javax.swing.JPanel();
        cbCategory = new javax.swing.JComboBox();
        btnInsert = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        chkKeepOpen = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/hollyit/drupaldevel/api/Bundle"); // NOI18N
        setTitle(bundle.getString("DrupalDevelDialog.title")); // NOI18N
        setAlwaysOnTop(true);
        setIconImage(null);
        setModal(true);
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);

        pnAPIType.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("DrupalDevelDialog.pnAPIType.border.title"))); // NOI18N

        cbApiType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbApiType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbApiTypeItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnAPITypeLayout = new javax.swing.GroupLayout(pnAPIType);
        pnAPIType.setLayout(pnAPITypeLayout);
        pnAPITypeLayout.setHorizontalGroup(
            pnAPITypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAPITypeLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(cbApiType, 0, 339, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnAPITypeLayout.setVerticalGroup(
            pnAPITypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAPITypeLayout.createSequentialGroup()
                .addComponent(cbApiType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDrupalVersion.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("DrupalDevelDialog.pnlDrupalVersion.border.title"))); // NOI18N

        cbApiVersion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbApiVersion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbApiVersionItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlDrupalVersionLayout = new javax.swing.GroupLayout(pnlDrupalVersion);
        pnlDrupalVersion.setLayout(pnlDrupalVersionLayout);
        pnlDrupalVersionLayout.setHorizontalGroup(
            pnlDrupalVersionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDrupalVersionLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(cbApiVersion, 0, 339, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDrupalVersionLayout.setVerticalGroup(
            pnlDrupalVersionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDrupalVersionLayout.createSequentialGroup()
                .addComponent(cbApiVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnItem.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("DrupalDevelDialog.pnItem.border.title"))); // NOI18N

        cbItem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout pnItemLayout = new javax.swing.GroupLayout(pnItem);
        pnItem.setLayout(pnItemLayout);
        pnItemLayout.setHorizontalGroup(
            pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnItemLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(cbItem, 0, 339, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnItemLayout.setVerticalGroup(
            pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnItemLayout.createSequentialGroup()
                .addComponent(cbItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnCategory.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("DrupalDevelDialog.pnCategory.border.title"))); // NOI18N

        cbCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCategoryItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnCategoryLayout = new javax.swing.GroupLayout(pnCategory);
        pnCategory.setLayout(pnCategoryLayout);
        pnCategoryLayout.setHorizontalGroup(
            pnCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCategoryLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(cbCategory, 0, 339, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnCategoryLayout.setVerticalGroup(
            pnCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCategoryLayout.createSequentialGroup()
                .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnInsert.setText(bundle.getString("DrupalDevelDialog.btnInsert.text")); // NOI18N

        btnCancel.setText(bundle.getString("DrupalDevelDialog.btnCancel.text")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        chkKeepOpen.setText(org.openide.util.NbBundle.getMessage(DrupalDevelDialog.class, "DrupalDevelDialog.chkKeepOpen.text")); // NOI18N
        chkKeepOpen.setToolTipText(org.openide.util.NbBundle.getMessage(DrupalDevelDialog.class, "DrupalDevelDialog.chkKeepOpen.toolTipText")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnAPIType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnItem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkKeepOpen)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlDrupalVersion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(btnInsert)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(pnlDrupalVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnAPIType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkKeepOpen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbApiVersionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbApiVersionItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.setTypes();
        }

    }//GEN-LAST:event_cbApiVersionItemStateChanged

    private void cbApiTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbApiTypeItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.setCategory();
        }
    }//GEN-LAST:event_cbApiTypeItemStateChanged

    private void cbCategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCategoryItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.setItems();
        }
    }//GEN-LAST:event_cbCategoryItemStateChanged

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DrupalDevelDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DrupalDevelDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DrupalDevelDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DrupalDevelDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DrupalDevelDialog dialog = new DrupalDevelDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    public javax.swing.JButton btnInsert;
    private javax.swing.JComboBox cbApiType;
    private javax.swing.JComboBox cbApiVersion;
    private javax.swing.JComboBox cbCategory;
    private javax.swing.JComboBox cbItem;
    public javax.swing.JCheckBox chkKeepOpen;
    private javax.swing.JPanel pnAPIType;
    private javax.swing.JPanel pnCategory;
    private javax.swing.JPanel pnItem;
    private javax.swing.JPanel pnlDrupalVersion;
    // End of variables declaration//GEN-END:variables
}
